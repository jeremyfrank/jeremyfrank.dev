---
import type { CollectionEntry } from 'astro:content'

type Craft = CollectionEntry<'craft'>

type Props = {
  item: Craft
  index: number
}

const { item, index }: Props = Astro.props
const isVideo = (src: string) => src.includes('mp4')
---

<li class="item">
  <a href={`craft/${item.id}/`} data-astro-prefetch>
    <span class="sr-only">{item.data.title}</span>
    {
      isVideo(item.data.preview.src) && (
        <video
          width={item.data.preview.width}
          height={item.data.preview.height}
          poster={
            item.data.preview.poster ? item.data.preview.poster : undefined
          }
          onmouseover="this.play()"
          onmouseout="this.pause()"
          preload="metadata"
          loop
          muted
          playsinline
        >
          <source src={item.data.preview.src} type="video/mp4" />
        </video>
      )
    }
    {
      !isVideo(item.data.preview.src) && (
        <img
          src={item.data.preview.src}
          width={item.data.preview.width}
          height={item.data.preview.height}
          loading={index > 2 ? 'lazy' : 'eager'}
          alt=""
        />
      )
    }
  </a>
  <span aria-hidden="true">{item.data.title}</span>
</li>

<style>
  .item {
    flex-shrink: 0;
    inline-size: min(300px + 2.25vw, 100%);
    position: relative;
    scroll-snap-align: center;
  }

  a {
    border-radius: var(--radius);
    background: var(--bg-color-accent);
    display: block;
    transform-style: preserve-3d;
    transform: translate3d(0, 0, 0) scale(1);
    transition: transform 200ms ease-in-out;

    &:hover {
      transform: translate3d(0, 0, 0) scale(1.03);
    }

    &:focus-visible {
      @apply ring-offset-4 ring-offset-inherit;
    }
  }

  img,
  video {
    border-radius: inherit;
  }

  span {
    text-transform: uppercase;
    font-family: monospace;
    padding: 1em 0;
    display: block;
    text-align: center;
  }
</style>
