---
import { getCollection } from 'astro:content'
import type { CollectionEntry } from 'astro:content'

import BaseLayout from '@/layouts/BaseLayout.astro'
import Intro from '@/components/Intro.astro'
import Articles from '@/components/Articles.astro'
import Clients from '@/components/Clients.astro'
import WorkScroller from '@/components/WorkScroller.astro'
import CraftCard from '@/components/CraftCard.astro'
import WorkCard from '@/components/WorkCard.astro'

type Craft = CollectionEntry<'craft'>
type Work = CollectionEntry<'work'>

const craftEntries = (await getCollection('craft')).sort(
  (a, b) => new Date(b.data.date).valueOf() - new Date(a.data.date).valueOf(),
)
const allWork = (await getCollection('work')).sort(
  (a, b) => new Date(b.data.date).valueOf() - new Date(a.data.date).valueOf(),
)
const latestArticles = (await getCollection('articles'))
  .sort(
    (a, b) => new Date(b.data.date).valueOf() - new Date(a.data.date).valueOf(),
  )
  .slice(0, 5)
---

<BaseLayout>
  <Intro />

  <h2>Craft</h2>
  <p>Implementing user interface and interaction details</p>
  <WorkScroller>
    {
      craftEntries.map((entry: Craft, index: number) => (
        <CraftCard item={entry} index={index} />
      ))
    }
  </WorkScroller>

  <h2>Work</h2>
  <p>Past projects</p>
  <WorkScroller>
    {
      allWork.map((item: Work, index: number) => (
        <WorkCard item={item} index={index} />
      ))
    }
  </WorkScroller>

  <h2>Writing</h2>
  <p>Sometimes I have time to write</p>
  <Articles articles={latestArticles} />

  <h2>Select Clients</h2>
  <p>
    I’m proud to have worked with a wide variety of companies and organizations
    over the years. Here’s just a few of them!
  </p>
  <Clients />
</BaseLayout>

<style>
  h2 {
    margin-block-start: var(--fluid-50-100);
    width: max-content;

    :global(.scroller) + & {
      margin-block-start: var(--fluid-0-50);
    }

    &::after {
      --outdent: 4rem;
      content: '';
      display: block;
      border: 1px solid var(--text-color-bright);
      width: calc(100% + var(--outdent) + 0.125em);
      margin-inline-start: calc(var(--outdent) * -1);
    }
  }
  p {
    margin-block-start: 0.33em;
    margin-block-end: 1em;
    text-wrap: pretty;
  }
</style>
